# docker 배포

    # 1. gradle 빌드
    gradle cleanQuerydslSourcesDir
    gradle build -x test

    # 2. aws ecr 로그인
    aws ecr get-login --region ap-northeast-2 --no-include-email
       -- 입력후 나온 docker-cli 명령어로 ECR 접속
       -- eg

       docker login -u AWS -p eyJwYXlsb2FkIjoieGduTURNbW9QMlFVUmJRcFY4U2tMK2dZTXhxMFVQQTNOdExtbTJDUmFQMW55bkNSaDF4eVJ1SFF4Z3crdTRrQ3ZEUUtDNTdiRlc5QU01ZHV5bHd6T3A5NTVWLzRNMU9iNndnMFVqVXN3QUQrZzdtQnJlT2hkRHVpdGxHcTN2MFI3NHRld1B1WkRkSkU1OGVUd2pDL3RUdjhGUzlFU2hOeFZsQ1lPMmxlT0I5cFVaRlJLdk0vRk9aWDJnNWNWQUR2TmtTVWlZeTZjZjh2S2w5SThJUVdZZTFyanplVStVSWE5S1kzTTVyakRmSWFKRzk3S3Q2YXRJY0R4OWxKbzZ1Z2llaDBxV2N4bk5aTnNxVVRXNUlmNk5UMjkrcFdlc2p3b3NIODdnV0xRcllwa3pqSlF4UjkveG5LeUxSQU1WcGtpSkZBakM2dG85elE3Y1lsOE9SOFBxMktsSysrQWVOakQwZ29zWTFGRTdyekowNVVSOUxtN045aUkzUDBsdjFmZU5FWTlkMG9iNGcwNFhUcTNzcmU5RHZ1bFRVc2N3Qm5OQjRtSDQxMnp6V0VZNGNJQ1JPcjh2TGRrNWJnMEt2Mk9lemlvRDdRZGRnQlh0UklZdFNJNmVud1BSTnpkeFJia2ZreDIrNlJXZVd6WE56QThXOC80TXdDc0p5YTZOTXFqUWhENy9jRk00RG9jNENtN0dXT2Vxa0dlcEI2ZTdnd1RHOWJvRithakNBSi8yc1pNakZ4TlZWN1FoeENIWml2RlM1ODVKZUpUbnNITTl6cWlpd2UwT1Rhb3lnbXYwTE9OWmhvSGd5RlY1bU0raEZqNzlFeVhIVENHblFZd0ZoVkx0cGptQjlrQllUSDYwalJ5NU5HU0lRYmJxQU54Um96OFFLaHhBQWRxQk1Gc2NJZHlVOFFTamNrRWd5NHV5SklNZHJoT3FUYWQyamZSQXZaVVNzYnVoVHkxV1FqdC96U09Bbmx4VkNRNUtEU0ZoM2JxVnZrNWUzdXRacC9KNGIyR2pFVlUxWWpQVEtreVFySUNsdVpqeTFzVUJjaVc0aHlTcE1EWDY0dGhTOFJBcVZhQUF0T1piTjVTNGJmV0pOeTFKVk15a1AxTFU3N1RLblRvM3VYK3dwekZYN0E3U0x3bC9adEZqR044SzFySXl3TDJLWXI5VXVRM01TaVU2dHRGT3QvMEIwSVM2ODVGYk5zc3cxdDRVaU9NNUJOdW4vT1cwWlhCeDFpb0FKbXNtZkQ0TG95a1hmemNFa3JvWHhwenQ5TEtCTmhkWDM0clRpN2l4QnNMM05NKzI0SElyM3RRelRiaE15Q0h6SGRjUTJVMTF4Snp5U1o5cUZxeUJBVXQ2eUk3RjlYZE5ueDBlcmNYc0pBdjdNbm9PVERZcUF3TXllb1p2a2wrazMrN3kzanhqSnlnL05hVWxpOTRXeGVFRGZuY0hRbUNiYkFRZUpvSEo5cCs0NFBTejZtWkxoSHhVKzZHaHAvZlZCUXp6Z05zUk40Ykp2REJPcERBM009IiwiZGF0YWtleSI6IkFRSUJBSGhBT3NhVzJnWk4wOVdOdE5Ha1ljOHFwMTF4U2haL2RyRUVveTFIazhMWFdnR1hoODRhbmZyZDM3QVl6MmdJY1doR0FBQUFmakI4QmdrcWhraUc5dzBCQndhZ2J6QnRBZ0VBTUdnR0NTcUdTSWIzRFFFSEFUQWVCZ2xnaGtnQlpRTUVBUzR3RVFRTXdFWGtiOHNaVDdwSUN4MG9BZ0VRZ0RzL2Y2bm1rUmVzZXVYT3p4OW16N0g0VWNGcGJWSTBadFArSjNyWXZFTFJVKzdOaDBQMUpiM3p0WEo4Z0RRaFQ0UmczaVR5R2lWbkZkaGNiZz09IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTc2MTcxMjE0fQ== https://556347504352.dkr.ecr.ap-northeast-2.amazonaws.com


    # 3. build & deploy
    docker-compose build
    docker tag sight/sortographer:latest 556347504352.dkr.ecr.ap-northeast-2.amazonaws.com/sight/sortographer:latest
    docker push 556347504352.dkr.ecr.ap-northeast-2.amazonaws.com/sight/sortographer:latest



# 2. DB dump
mysqldump -u sight ^
--databases jpa ^
--single-transaction ^
--compress ^
--order-by-primary ^
-pbksul40 | mysql -u sight ^
--port=3306 ^
--host=kpudb.cxtao9iyomgy.ap-northeast-2.rds.amazonaws.com kpudb^
-pbksul1212




https://withhamit.tistory.com/185



<RoutingRules>
  <RoutingRule>
    <Condition>
       <KeyPrefixEquals>api/</KeyPrefixEquals>
    </Condition>
    <Redirect>
      <HostName>www.server-sortographer.cf</HostName>
      <ReplaceKeyPrefixWith>api/</ReplaceKeyPrefixWith>
    </Redirect>
  </RoutingRule>
</RoutingRules>
